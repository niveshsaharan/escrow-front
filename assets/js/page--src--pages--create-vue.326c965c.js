(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{Vh8b:function(t,e,r){"use strict";r.r(e);var n,a=r("HaE+"),o=(r("sMBO"),r("rB9j"),r("hByQ"),r("07d7"),r("PKPk"),r("3bBZ"),r("Kz25"),r("ma9I"),r("oVuX"),r("tkto"),r("2B1R"),r("mRH6"),r("ls82"),r("KkUu")),s=r("2u47");n=r("cCgg");var i={metaInfo:{title:"Create contract!"},data:function(){return{serviceProviderContract:o,erc20:s,serviceProviderAddress:"0xb79a18115a15194D0066d0F7ce63a7C261DC6A6E",network:{default:"rinkeby",current:null,map:{137:"mainnet",80001:"mumbai"},list:{rinkeby:{web3Provider:"https://rinkeby.infura.io/v3/cd808238c8684678a97167ac62dc29b0",explorer:"https://rinkeby.etherscan.io",id:4,name:"Rinkeby Test Network"}}},metamask:{},makingTransaction:!1,transactionStarted:!1,formDisabled:!1,contract:{id:null,buyer:"0xB849EfaCe9C68D9ECcE356150EE7D0Be87506485",item:"0x476f231a320d6E9C548420cac55Fbc5f74A55c31",currency:"0x322c8115A858244936C20c87cFDc38Fb69e1cE14",quantity:"10",amount:"800",item_name:"USDT",currency_name:"INR"},trx:{hash:"",link:""},service:null,account:null}},mounted:function(){var t=this;return Object(a.a)(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.currentNetwork=t.getParam("network")||t.network.default,t.initDapp(),e.next=4,t.initWeb3(t.currentNetwork,!0);case 4:return e.next=6,t.initService(t.currentNetwork);case 6:t.registerEvents();case 7:case"end":return e.stop()}}),e)})))()},computed:{},methods:{itemName:function(t,e){var r=this;return Object(a.a)(regeneratorRuntime.mark((function n(){var a,o;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(42!==e.length){n.next=12;break}if("0x0000000000000000000000000000000000000000"!==e){n.next=4;break}return r.contract[t]="ETH",n.abrupt("return");case 4:return r.contract[t]="Loading...",a=new r.web3.eth.Contract(r.erc20.abi,e),n.next=8,a.methods.name().call();case 8:o=n.sent,r.contract[t]=o||"Invalid",n.next=13;break;case 12:r.contract[t]="Invalid";case 13:case"end":return n.stop()}}),n)})))()},registerEvents:function(){var t=this;window.ethereum&&window.ethereum.on("chainChanged",(function(e){t.metamask.netId=t.web3.utils.hexToNumber(e),t.initDapp()}))},getParam:function(t){var e=window.location.search;return new URLSearchParams(e).get(t)},initDapp:function(){this.network.current=this.network.list[this.currentNetwork],this.initWeb3(this.currentNetwork,!0)},initWeb3:function(t,e){var r=this;return Object(a.a)(regeneratorRuntime.mark((function a(){var o;return regeneratorRuntime.wrap((function(a){for(;;)switch(a.prev=a.next){case 0:if(r.network.list[t]){a.next=3;break}throw r.$toast.error("Failed initializing network ".concat(t,". Allowed values are ").concat(Object.keys(r.network.list).join(", "),".")),new Error("Failed initializing network ".concat(t,". Allowed values are ").concat(Object.keys(r.network.list).join(", "),"."));case 3:if(e&&void 0!==window.ethereum){a.next=9;break}r.network.current=r.network.list[t],r.web3Provider=new n.providers.HttpProvider(r.network.list[t].web3Provider),r.web3=new n(r.web3Provider),a.next=20;break;case 9:return r.web3Provider=window.ethereum,r.web3=new n(r.web3Provider),r.metamask.installed=r.web3Provider.isMetaMask,a.next=14,r.web3.eth.getChainId();case 14:if(o=a.sent,r.metamask.netId=o,o===r.network.list[t].id){a.next=20;break}return r.network.current=r.network.list[r.network.map[o]],a.next=20,r.initWeb3(t,!1);case 20:case"end":return a.stop()}}),a)})))()},initService:function(){var t=this;return Object(a.a)(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t.service=new t.web3.eth.Contract(t.serviceProviderContract.abi,t.serviceProviderAddress);case 1:case"end":return e.stop()}}),e)})))()},create:function(){var t=this;return Object(a.a)(regeneratorRuntime.mark((function e(){var r,n,a,o,s,i,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.metamask.installed){e.next=3;break}return t.$toast.error("To create a Token please install MetaMask!"),e.abrupt("return");case 3:if(t.metamask.netId===t.network.current.id){e.next=6;break}return t.$toast.error("Your MetaMask in on the wrong network. Please switch on ".concat(t.network.current.name," and try again!")),e.abrupt("return");case 6:return t.trx.hash="",t.trx.link="",t.formDisabled=!0,t.makingTransaction=!0,t.sourceCodeVerified=!1,t.verificationCount=0,e.next=14,t.web3Provider.request({method:"eth_requestAccounts"});case 14:return e.next=16,t.web3.eth.getCoinbase();case 16:if(r=e.sent,t.account=r,n={from:r},a=t.web3.utils.toWei(t.contract.quantity,"ether"),o=t.web3.utils.toWei(t.contract.amount,"ether"),"0x0000000000000000000000000000000000000000"===t.contract.item){e.next=37;break}return s=new t.web3.eth.Contract(t.erc20.abi,t.contract.item),e.next=25,s.methods.allowance(r,t.serviceProviderAddress).call();case 25:if(!(e.sent<a)){e.next=35;break}return t.$toast.info("You need to approve!"),e.next=30,s.methods.approve(t.serviceProviderAddress,t.web3.utils.toWei(a,"ether")).send(n).on("error",(function(e){t.makingTransaction=!1,t.formDisabled=!1,t.$toast.error(e.message)})).on("transactionHash",(function(e){console.log(e),t.$toast.info("Approval hash received"),t.transactionStarted=!0})).on("receipt",(function(e){console.log(e),t.$forceUpdate(),t.$toast.success("Well done! Approval request success!")}));case 30:i=e.sent,console.log(i),e.next=35;break;case 35:e.next=38;break;case 37:n.value=a;case 38:return e.next=40,t.service.methods.create(t.contract.buyer,t.contract.item,t.contract.currency,a,o).estimateGas(n).catch((function(e){t.$toast.error(e)}));case 40:if(c=e.sent){e.next=43;break}return e.abrupt("return");case 43:n.gas=c,t.service.methods.create(t.contract.buyer,t.contract.item,t.contract.currency,a,o).send(n).on("error",(function(e){t.makingTransaction=!1,t.formDisabled=!1,t.$toast.error(e.message)})).on("transactionHash",(function(e){t.transactionStarted=!0,t.trx.hash=e,t.trx.link="".concat(t.network.current.explorer,"/tx/").concat(t.trx.hash)})).on("receipt",(function(e){console.log(e),t.$forceUpdate();var r=e.events.ContractCreated.returnValues.id;t.$toast.success("Well done! Your contract was created! The id is "+r),t.contract.id=r}));case 45:case"end":return e.stop()}}),e)})))()},estimateGas:function(t,e){var r=this;return Object(a.a)(regeneratorRuntime.mark((function n(){var a;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,r.service.methods.create(t).estimateGas(e).catch((function(t){r.$toast.error(t)}));case 2:return a=n.sent,n.abrupt("return",a);case 4:case"end":return n.stop()}}),n)})))()}}},c=r("KHd+"),u=Object(c.a)(i,(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("Layout",[r("div",{staticClass:"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8"},[[r("ValidationObserver",{scopedSlots:t._u([{key:"default",fn:function(e){var n=e.handleSubmit,a=e.invalid;return[r("form",{staticClass:"w-full max-w-7xl mx-auto xl:px-8",on:{submit:function(e){return e.preventDefault(),n(t.create)}}},[t.metamask.installed?t.account?r("div",[t._v("\n            You are transacting as "+t._s(t.account)+"\n          ")]):t._e():r("div",[r("div",{staticClass:"p-4 bg-yellow-100 text-yellow-700 text-base border-yellow-400"},[r("h4",{staticClass:"text-xl font-semibold mb-1"},[t._v("\n                Attention!\n              ")]),r("p",[t._v("\n                This app is tested with "),r("a",{staticClass:"underline",attrs:{href:"https://metamask.io/",target:"_blank"}},[t._v("MetaMask")]),t._v(" wallet only. Use any other wallet at your own risk.\n              ")])])]),r("div",{staticClass:"mt-2"},[r("g-link",{staticClass:"mt-2 text-blue-600 underline",attrs:{to:"/"}},[t._v("View all contracts")])],1),r("div",{staticClass:"mt-4 md:flex md:space-x-10"},[r("div",{staticClass:"flex-1  "},[r("h2",{staticClass:"p-3 bg-gray-700 text-white"},[t._v("\n                Contract Details\n              ")]),r("div",{staticClass:"px-4 pt-3 pb-6 grid grid-cols-1 border-t-0 border-2 border-gray-300 gap-y-6 bg-white "},[r("div",[r("label",{staticClass:"block text-sm font-medium text-gray-700",attrs:{for:"contractAddress"}},[t._v("\n                    Token you're giving *\n                  ")]),r("ValidationProvider",{attrs:{name:"your token address",rules:"required|min:42|max:42"},scopedSlots:t._u([{key:"default",fn:function(e){var n=e.errors;return[r("div",{staticClass:"mt-1 rounded-md shadow-sm"},[r("input",{directives:[{name:"model",rawName:"v-model",value:t.contract.item,expression:"contract.item"}],staticClass:"focus:ring-indigo-500 focus:border-indigo-500 block w-full min-w-0 rounded-none rounded-r-md sm:text-sm border-gray-300",attrs:{id:"contractAddress",type:"text",maxlength:"42",placeholder:"x0000000000000000000000000000000000000000",autocomplete:"",required:""},domProps:{value:t.contract.item},on:{input:[function(e){e.target.composing||t.$set(t.contract,"item",e.target.value)},function(e){return t.itemName("item_name",t.contract.item)}]}}),t.contract.item_name?r("p",{staticClass:"mt-1 text-yellow-500 text-sm"},[t._v(t._s(t.contract.item_name))]):t._e()]),r("p",{staticClass:"mt-1 text-xs text-red-600"},[t._v("\n                      "+t._s(n[0])+"\n                    ")])]}}],null,!0)}),r("p",{staticClass:"text-xs mt-2 text-gray-600"},[t._v("\n                    Contract address for the token you want to exchange.\n                  ")])],1),r("div",[r("label",{staticClass:"block text-sm font-medium text-gray-700",attrs:{for:"exchangeTokenAddress"}},[t._v("\n                    Token you want in exchange *\n                  ")]),r("ValidationProvider",{attrs:{name:"exchange token address",rules:"required|min:42|max:42"},scopedSlots:t._u([{key:"default",fn:function(e){var n=e.errors;return[r("div",{staticClass:"mt-1 rounded-md shadow-sm"},[r("input",{directives:[{name:"model",rawName:"v-model",value:t.contract.currency,expression:"contract.currency"}],staticClass:"focus:ring-indigo-500 focus:border-indigo-500 block w-full min-w-0 rounded-none rounded-r-md sm:text-sm border-gray-300",attrs:{id:"exchangeTokenAddress",type:"text",maxlength:"42",placeholder:"x0000000000000000000000000000000000000000",autocomplete:"",required:""},domProps:{value:t.contract.currency},on:{input:function(e){e.target.composing||t.$set(t.contract,"currency",e.target.value)}}}),t.contract.currency_name?r("p",{staticClass:"mt-1 text-yellow-500 text-sm"},[t._v(t._s(t.contract.currency_name))]):t._e()]),r("p",{staticClass:"mt-1 text-xs text-red-600"},[t._v("\n                      "+t._s(n[0])+"\n                    ")])]}}],null,!0)}),r("p",{staticClass:"text-xs mt-2 text-gray-600"},[t._v("\n                    Contract address for the token you want in return.\n                  ")])],1),r("div",{},[r("label",{staticClass:"block text-sm font-medium text-gray-700",attrs:{for:"tokenQuantity"}},[t._v("\n                    Token amount you are giving *\n                  ")]),r("ValidationProvider",{attrs:{name:"token amount",rules:"required|min:0"},scopedSlots:t._u([{key:"default",fn:function(e){var n=e.errors;return[r("div",{staticClass:"mt-1 rounded-md shadow-sm"},[r("input",{directives:[{name:"model",rawName:"v-model",value:t.contract.quantity,expression:"contract.quantity"}],staticClass:"focus:ring-indigo-500 focus:border-indigo-500 block w-full min-w-0 rounded-none rounded-r-md sm:text-sm border-gray-300",attrs:{id:"tokenQuantity",type:"number",min:"0",step:"any",placeholder:"1000",autocomplete:"tokenQuantity"},domProps:{value:t.contract.quantity},on:{input:function(e){e.target.composing||t.$set(t.contract,"quantity",e.target.value)}}})]),r("p",{staticClass:"mt-1 text-xs text-red-600"},[t._v("\n                    "+t._s(n[0])+"\n                  ")])]}}],null,!0)}),r("p",{staticClass:"text-xs mt-2 text-gray-600"},[t._v("\n                   Token amount you're giving\n                  ")])],1),r("div",{},[r("label",{staticClass:"block text-sm font-medium text-gray-700",attrs:{for:"tokenExchangeQuantity"}},[t._v("\n                    Token amount you want *\n                  ")]),r("ValidationProvider",{attrs:{name:"token amount",rules:"required|min:1|max:18"},scopedSlots:t._u([{key:"default",fn:function(e){var n=e.errors;return[r("div",{staticClass:"mt-1 rounded-md shadow-sm"},[r("input",{directives:[{name:"model",rawName:"v-model",value:t.contract.amount,expression:"contract.amount"}],staticClass:"focus:ring-indigo-500 focus:border-indigo-500 block w-full min-w-0 rounded-none rounded-r-md sm:text-sm border-gray-300",attrs:{id:"tokenExchangeQuantity",type:"number",min:"0",maxlength:"18",placeholder:"1000",autocomplete:"tokenExchangeQuantity"},domProps:{value:t.contract.amount},on:{input:function(e){e.target.composing||t.$set(t.contract,"amount",e.target.value)}}})]),r("p",{staticClass:"mt-1 text-xs text-red-600"},[t._v("\n                    "+t._s(n[0])+"\n                  ")])]}}],null,!0)}),r("p",{staticClass:"text-xs mt-2 text-gray-600"},[t._v("\n                   Token amount you want\n                  ")])],1),r("div",[r("label",{staticClass:"block text-sm font-medium text-gray-700",attrs:{for:"buyerAddress"}},[t._v("\n                    Who do you want to exchange with *\n                  ")]),r("ValidationProvider",{attrs:{name:"buyer",rules:"required|min:42|max:42"},scopedSlots:t._u([{key:"default",fn:function(e){var n=e.errors;return[r("div",{staticClass:"mt-1 rounded-md shadow-sm"},[r("input",{directives:[{name:"model",rawName:"v-model",value:t.contract.buyer,expression:"contract.buyer"}],staticClass:"focus:ring-indigo-500 focus:border-indigo-500 block w-full min-w-0 rounded-none rounded-r-md sm:text-sm border-gray-300",attrs:{id:"buyerAddress",type:"text",maxlength:"42",placeholder:"x0000000000000000000000000000000000000000",autocomplete:"",required:""},domProps:{value:t.contract.buyer},on:{input:function(e){e.target.composing||t.$set(t.contract,"buyer",e.target.value)}}})]),r("p",{staticClass:"mt-1 text-xs text-red-600"},[t._v("\n                      "+t._s(n[0])+"\n                    ")])]}}],null,!0)}),r("p",{staticClass:"text-xs mt-2 text-gray-600"},[t._v("\n                    Ethereum address of buyer.\n                  ")])],1),r("div",{},[r("button",{staticClass:"uppercase w-full  inline-flex justify-center py-4 px-4 border border-transparent shadow-sm text-normal font-medium rounded-md",class:a?"bg-gray-400 text-white":"bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 text-white ",attrs:{type:"submit",disabled:a}},[t._v("\n                    Confirm\n                  ")])])]),t.contract.id?r("div",{staticClass:"mt-2"},[r("g-link",{staticClass:"mt-2 text-blue-600 underline",attrs:{to:"/view/"+t.contract.id}},[t._v("View this newly contract contract")])],1):t._e()])])])]}}])})]],2)])}),[],!1,null,null,null);e.default=u.exports}}]);